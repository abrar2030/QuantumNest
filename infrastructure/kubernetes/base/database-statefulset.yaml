apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.appName }}-database
  labels:
    app: {{ .Values.appName }}-database
spec:
  serviceName: {{ .Values.appName }}-database
  replicas: {{ .Values.database.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}-database
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}-database
    spec:
      containers:
      - name: {{ .Values.appName }}-database
        image: {{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.database.containerPort }}
        resources:
          limits:
            cpu: {{ .Values.database.resources.limits.cpu }}
            memory: {{ .Values.database.resources.limits.memory }}
          requests:
            cpu: {{ .Values.database.resources.requests.cpu }}
            memory: {{ .Values.database.resources.requests.memory }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.appName }}-secrets
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: {{ .Values.database.name }}
        - name: MYSQL_USER
          value: {{ .Values.database.user }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.appName }}-secrets
              key: mysql-password
        volumeMounts:
        - name: {{ .Values.appName }}-database-data
          mountPath: /var/lib/mysql
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["mysql", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.appName }}-database-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ .Values.database.storageClass }}
      resources:
        requests:
          storage: {{ .Values.database.storage }}
